(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{388:function(t,e,s){"use strict";s.r(e);var a=s(0),r=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h2",{attrs:{id:"template-literals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#template-literals","aria-hidden":"true"}},[t._v("#")]),t._v(" Template Literals")]),t._v(" "),s("p",[t._v("The template literal is a syntax for string literal that allows for embedded expressions and multi-line support. To create a template literal the backtick ("),s("code",[t._v("`")]),t._v(") is used to surrounded the string literal and any expressions.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" greeting "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`Hello, World`")])]),t._v("\n")])])]),s("p",[t._v("Template literals also has multi-line support, which means it possible to include a return inside of a string without the use of the special character or string concatenation.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" address "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`\n221B Baker Street\nLondon, England`")])]),t._v("\n")])])])])}],!1,null,null,null);e.default=r.exports}}]);