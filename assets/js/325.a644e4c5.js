(window.webpackJsonp=window.webpackJsonp||[]).push([[325],{533:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("div",{staticClass:"watch"},[s("p",[s("a",{attrs:{href:"https://www.linkedin.com/learning/php-essential-training-2/logical-operators",target:"_blank",rel:"noopener noreferrer"}},[t._v('Watch "Logical operators" on LinkedIn Learning'),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("An operator is a symbol that takes one or more values to yield another value. There many different types of operators including Arithmetic Operators, Comparison Operators and Logical Operators.")]),t._v(" "),t._m(1),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.php.net/manual/en/language.operators.arithmetic.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Arithmetic operators"),s("OutboundLink")],1),t._v(" are used to perform basic arithmetic, including addition, subtraction, multiplication and division.")]),t._v(" "),s("table",[t._m(2),t._v(" "),s("tbody",[s("tr",[t._m(3),t._v(" "),s("td",[t._v("Addition")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a + $b")])])],1),t._v(" "),t._m(4)]),t._v(" "),s("tr",[t._m(5),t._v(" "),s("td",[t._v("Subtraction")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a - $b")])])],1),t._v(" "),t._m(6)]),t._v(" "),s("tr",[t._m(7),t._v(" "),s("td",[t._v("Multiplication")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a * $b")])])],1),t._v(" "),t._m(8)]),t._v(" "),s("tr",[t._m(9),t._v(" "),s("td",[t._v("Division")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a / $b")])])],1),t._v(" "),t._m(10)]),t._v(" "),s("tr",[t._m(11),t._v(" "),s("td",[t._v("Modulo")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a % $b")])])],1),t._v(" "),t._m(12)])])]),t._v(" "),t._m(13),s("div",{staticClass:"try"},[s("p",[s("a",{attrs:{href:"https://repl.it/@eisenbm/PHP-Arithmetic-Operators-II",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it yourself on Repl.it"),s("OutboundLink")],1)])]),t._v(" "),t._m(14),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.php.net/manual/en/language.operators.comparison.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Comparison Operators"),s("OutboundLink")],1),t._v(" are used to compare two values. When comparing values of different data types, for example a string and a number, PHP will attempt to convert the string to a number first and then do the comparison.")]),t._v(" "),s("table",[t._m(15),t._v(" "),s("tbody",[s("tr",[t._m(16),t._v(" "),s("td",[t._v("Equal")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a == $b")])])],1),t._v(" "),t._m(17)]),t._v(" "),s("tr",[t._m(18),t._v(" "),s("td",[t._v("Identical")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a === $b")])])],1),t._v(" "),t._m(19)]),t._v(" "),s("tr",[t._m(20),t._v(" "),s("td",[t._v("Not Equal")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a != $b")])])],1),t._v(" "),t._m(21)]),t._v(" "),s("tr",[t._m(22),t._v(" "),s("td",[t._v("Not Identical")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a !== $b")])])],1),t._v(" "),t._m(23)]),t._v(" "),s("tr",[t._m(24),t._v(" "),s("td",[t._v("Less than")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a < $b")])])],1),t._v(" "),t._m(25)]),t._v(" "),s("tr",[t._m(26),t._v(" "),s("td",[t._v("Greater than")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a > $b")])])],1),t._v(" "),t._m(27)]),t._v(" "),s("tr",[t._m(28),t._v(" "),s("td",[t._v("Less than or equal to")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a <= $b")])])],1),t._v(" "),t._m(29)]),t._v(" "),s("tr",[t._m(30),t._v(" "),s("td",[t._v("Greater than or equal to")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a >= $b")])])],1),t._v(" "),t._m(31)]),t._v(" "),s("tr",[t._m(32),t._v(" "),s("td",[t._v("Spaceship")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a <=> $b")])])],1),t._v(" "),t._m(33)])])]),t._v(" "),t._m(34),s("div",{staticClass:"try"},[s("p",[s("a",{attrs:{href:"https://repl.it/@eisenbm/PHP-Comparison-Operators",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it yourself on Repl.it"),s("OutboundLink")],1)])]),t._v(" "),t._m(35),t._v(" "),s("p",[s("a",{attrs:{href:"http://php.net/manual/en/language.operators.logical.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Logical Operators"),s("OutboundLink")],1),t._v(" are used to combine and make more complex expressions.")]),t._v(" "),s("table",[t._m(36),t._v(" "),s("tbody",[s("tr",[t._m(37),t._v(" "),s("td",[t._v("Not")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("!$a")])])],1),t._v(" "),t._m(38)]),t._v(" "),s("tr",[t._m(39),t._v(" "),s("td",[t._v("And")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a && $b")])])],1),t._v(" "),t._m(40)]),t._v(" "),s("tr",[t._m(41),t._v(" "),s("td",[t._v("Or")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("nobr",[s("code",[t._v("$a || $b")])])],1),t._v(" "),t._m(42)])])]),t._v(" "),t._m(43),t._v(" "),t._m(44)])},[function(){var t=this.$createElement,a=this._self._c||t;return a("h1",{attrs:{id:"php-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#php-operators","aria-hidden":"true"}},[this._v("#")]),this._v(" PHP Operators")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"arithmetic-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arithmetic-operators","aria-hidden":"true"}},[this._v("#")]),this._v(" Arithmetic Operators")])},function(){var t=this.$createElement,a=this._self._c||t;return a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[this._v("Operator")]),this._v(" "),a("th",[this._v("Name")]),this._v(" "),a("th",{staticStyle:{"text-align":"center"}},[this._v("Example")]),this._v(" "),a("th",[this._v("Result")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("+")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[this._v("Sum of "),a("code",[this._v("$a")]),this._v(" and "),a("code",[this._v("$b")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("-")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[this._v("Difference of "),a("code",[this._v("$a")]),this._v(" and "),a("code",[this._v("$b")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("*")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[this._v("Product of "),a("code",[this._v("$a")]),this._v(" and "),a("code",[this._v("$b")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("/")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[this._v("Divides "),a("code",[this._v("$a")]),this._v(" by "),a("code",[this._v("$b")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("%")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[this._v("Remainder of "),a("code",[this._v("$a")]),this._v(" divided by "),a("code",[this._v("$b")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.3333333333")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"comparison-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comparison-operators","aria-hidden":"true"}},[this._v("#")]),this._v(" Comparison Operators")])},function(){var t=this.$createElement,a=this._self._c||t;return a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[this._v("Operator")]),this._v(" "),a("th",[this._v("Name")]),this._v(" "),a("th",{staticStyle:{"text-align":"center"}},[this._v("Example")]),this._v(" "),a("th",[this._v("Result")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("==")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[a("code",[this._v("TRUE")]),this._v(" if "),a("code",[this._v("$a")]),this._v(" is equal to "),a("code",[this._v("$b")]),this._v(" in value")])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("===")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[a("code",[this._v("TRUE")]),this._v(" if "),a("code",[this._v("$a")]),this._v(" is equal to "),a("code",[this._v("$b")]),this._v(" in value and data type")])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("!=")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[a("code",[this._v("TRUE")]),this._v(" if "),a("code",[this._v("$a")]),this._v(" is not equal to "),a("code",[this._v("$b")]),this._v(" in value")])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("!==")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[a("code",[this._v("TRUE")]),this._v(" if "),a("code",[this._v("$a")]),this._v(" is not equal to "),a("code",[this._v("$b")]),this._v(" in value and data type")])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("<")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[a("code",[this._v("TRUE")]),this._v(" if "),a("code",[this._v("$a")]),this._v(" is less than "),a("code",[this._v("$b")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v(">")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[a("code",[this._v("TRUE")]),this._v(" if "),a("code",[this._v("$a")]),this._v(" is greater than "),a("code",[this._v("$b")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("<=")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[a("code",[this._v("TRUE")]),this._v(" if "),a("code",[this._v("$a")]),this._v(" is less than or equal to "),a("code",[this._v("$b")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v(">=")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[a("code",[this._v("TRUE")]),this._v(" if "),a("code",[this._v("$a")]),this._v(" is greater than equal to "),a("code",[this._v("$b")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("<=>")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("td",[t._v("Returns "),s("code",[t._v("0")]),t._v(" if "),s("code",[t._v("$a")]),t._v(" is equal to "),s("code",[t._v("$b")]),s("br"),s("br"),t._v("Returns "),s("code",[t._v("1")]),t._v(" if "),s("code",[t._v("$a")]),t._v(" is greater than "),s("code",[t._v("$b")]),s("br"),s("br"),t._v("Returns "),s("code",[t._v("-1")]),t._v(" if "),s("code",[t._v("$a")]),t._v(" is less than "),s("code",[t._v("$b")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bool(true)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bool(true)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bool(true)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bool(false)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bool(false)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bool(false)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bool(false)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bool(true)")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bool(true)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bool(true)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bool(false)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bool(true)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bool(true)")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// int(1)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// int(-1)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// int(0)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"logical-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logical-operators","aria-hidden":"true"}},[this._v("#")]),this._v(" Logical Operators")])},function(){var t=this.$createElement,a=this._self._c||t;return a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[this._v("Operator")]),this._v(" "),a("th",[this._v("Name")]),this._v(" "),a("th",{staticStyle:{"text-align":"center"}},[this._v("Example")]),this._v(" "),a("th",[this._v("Result")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("!")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[a("code",[this._v("TRUE")]),this._v(" if "),a("code",[this._v("$a")]),this._v(" is not "),a("code",[this._v("TRUE")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("&&")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",[a("code",[this._v("TRUE")]),this._v(" if both "),a("code",[this._v("$a")]),this._v(" and "),a("code",[this._v("$b")]),this._v(" are TRUE.")])},function(){var t=this.$createElement,a=this._self._c||t;return a("td",{staticStyle:{"text-align":"center"}},[a("code",[this._v("||")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("td",[s("code",[t._v("TRUE")]),t._v(" if either "),s("code",[t._v("$a")]),t._v(" or "),s("code",[t._v("$b")]),t._v(" is "),s("code",[t._v("TRUE")]),t._v(".")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Caution")]),t._v(" "),s("p",[t._v("It is also possible to use "),s("code",[t._v("and")]),t._v(" and "),s("code",[t._v("or")]),t._v(" in place of "),s("code",[t._v("&&")]),t._v(" and "),s("code",[t._v("||")]),t._v(". But these operators have different precedence and can result in unexpected results. Review the Logical Operators documentation for more information.")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this condition will be FALSE")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"a is larger than b AND "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"c is larger than d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this condition will be TRUE")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"a is larger than b OR "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"c is larger than d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// setting e if it is not set")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("isset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])])}],!1,null,null,null);a.default=n.exports}}]);