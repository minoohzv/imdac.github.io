(window.webpackJsonp=window.webpackJsonp||[]).push([[371],{579:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("div",{staticClass:"watch"},[e("p",[e("a",{attrs:{href:"https://www.linkedin.com/learning/php-essential-training-2/strings",target:"_blank",rel:"noopener noreferrer"}},[t._v('Watch "Strings" on LinkedIn Learning'),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("A "),e("a",{attrs:{href:"https://www.php.net/manual/en/language.types.string.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),e("OutboundLink")],1),t._v(" is a series of characters, surround by quotes or special syntax. A string can be created using "),e("a",{attrs:{href:"https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.single",target:"_blank",rel:"noopener noreferrer"}},[t._v("single quotes"),e("OutboundLink")],1),t._v(" or "),e("a",{attrs:{href:"https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.double",target:"_blank",rel:"noopener noreferrer"}},[t._v("double quotes"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("Strings can be using with echo statements to display the strings in the browser.")]),t._v(" "),t._m(1),e("p",[t._v("Strings can also be used with variables.")]),t._v(" "),t._m(2),e("div",{staticClass:"try"},[e("p",[e("a",{attrs:{href:"https://repl.it/@eisenbm/php-strings",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it yourself on Repl.it"),e("OutboundLink")],1)])]),t._v(" "),t._m(3),t._v(" "),e("p",[t._v("In the previous example, the period was use to concatenate or combine the strings together. But PHP allows for variable replacement or variable substitution, which will output variables that are embedded into string literals.")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),e("div",{staticClass:"try"},[e("p",[e("a",{attrs:{href:"https://repl.it/@eisenbm/php-strings",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it yourself on Repl.it"),e("OutboundLink")],1)])])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"php-strings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-strings","aria-hidden":"true"}},[this._v("#")]),this._v(" PHP Strings")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// echo a string with double quotes")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"Hello World <br>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// echo a string with single quotes")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'Hello World <br>'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// setting the variables to strings")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$greeting")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"Hello"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$target")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"World"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// combine variables together with a string")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$phrase")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$greeting")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('" "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$target")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$phrase")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"variable-substitution"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#variable-substitution","aria-hidden":"true"}},[this._v("#")]),this._v(" Variable Substitution")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("NOTE")]),this._v(" "),s("p",[this._v("Variable substitution only works with double quotes. It does not work with single quotes.")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// using variable substitution")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$phrase")])]),t._v(' Again <br>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// try it with single quotes")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'$phrase Again <br>'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("When using variable substitution, it is encourage to wrap the variable in a set of curly braces ("),s("code",[this._v("{ }")]),this._v("). This will let PHP know where the variable starts and stops.")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// using variable substitution with curly braces")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$phrase")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('Again <br>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])])])}],!1,null,null,null);s.default=n.exports}}]);